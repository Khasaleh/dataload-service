"""Create initial tables

Revision ID: 0001
Revises:
Create Date: 2023-11-15 10:00:00.000000
# Note: Actual Create Date will be set by Alembic upon generation. Using a placeholder.

"""
import os # For schema names
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# Schema constants (ensure these match defaults in app/db/models.py or are set in env for alembic)
PUBLIC_SCHEMA = os.getenv("PUBLIC_SCHEMA_NAME", "public")
CATALOG_SCHEMA = os.getenv("CATALOG_SCHEMA_NAME", "catalog_management")
BUSINESS_SCHEMA = os.getenv("BUSINESS_SCHEMA_NAME", "fazeal_business")

# revision identifiers, used by Alembic.
revision: str = '0001'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create schemas if they don't exist (optional, DB admin might do this)
    # op.execute(f"CREATE SCHEMA IF NOT EXISTS {CATALOG_SCHEMA}")
    # op.execute(f"CREATE SCHEMA IF NOT EXISTS {BUSINESS_SCHEMA}")
    # op.execute(f"CREATE SCHEMA IF NOT EXISTS {PUBLIC_SCHEMA}") # Public usually exists

    op.create_table('brands',
        sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False), # Changed to BigInteger
        sa.Column('business_details_id', sa.BigInteger(), nullable=False), # Already BigInteger
        sa.Column('name', sa.String(length=150), nullable=False), # Renamed from brand_name, added length
        sa.Column('logo', sa.String(length=500), nullable=False), # New field
        sa.Column('supplier_id', sa.BigInteger(), nullable=True), # New field
        sa.Column('active', sa.String(length=255), nullable=True), # New field
        sa.Column('created_by', sa.BigInteger(), nullable=True), # New field
        sa.Column('created_date', sa.BigInteger(), nullable=True), # New field
        sa.Column('updated_by', sa.BigInteger(), nullable=True), # New field
        sa.Column('updated_date', sa.BigInteger(), nullable=True), # New field
        # Removed old created_at, updated_at DateTime fields
        sa.PrimaryKeyConstraint('id', name=op.f('pk_brands')),
        sa.UniqueConstraint('business_details_id', 'name', name=op.f('uq_brand_business_name')), # Updated to 'name'
        schema=CATALOG_SCHEMA
    )
    # op.drop_index(op.f('ix_catalog_management_brands_brand_name'), table_name='brands', schema=CATALOG_SCHEMA) # Drop old index if name changed
    op.create_index(op.f('ix_catalog_management_brands_name'), 'brands', ['name'], unique=False, schema=CATALOG_SCHEMA) # Index on new 'name' field
    op.create_index(op.f('ix_catalog_management_brands_name'), 'brands', ['name'], unique=False, schema=CATALOG_SCHEMA) # Index on new 'name' field
    op.create_index(op.f('ix_catalog_management_brands_business_details_id'), 'brands', ['business_details_id'], unique=False, schema=CATALOG_SCHEMA)

    op.create_table('attribute', # Renamed table from 'attributes'
        sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False), # Changed to BigInteger
        sa.Column('business_details_id', sa.BigInteger(), nullable=False),
        sa.Column('name', sa.String(length=150), nullable=False), # Renamed from attribute_name, added length
        sa.Column('is_color', sa.Boolean(), nullable=False, server_default=sa.false_()), # New field
        sa.Column('active', sa.String(length=255), nullable=True), # New field
        sa.Column('created_by', sa.BigInteger(), nullable=True),   # New field
        sa.Column('created_date', sa.BigInteger(), nullable=True), # New field
        sa.Column('updated_by', sa.BigInteger(), nullable=True),   # New field
        sa.Column('updated_date', sa.BigInteger(), nullable=True), # New field
        # Removed 'allowed_values', 'created_at', 'updated_at'
        sa.PrimaryKeyConstraint('id', name=op.f('pk_attribute')), # Updated pk name
        sa.UniqueConstraint('business_details_id', 'name', name=op.f('uq_attribute_business_name')), # Updated to 'name'
        schema=CATALOG_SCHEMA
    )
    op.create_index(op.f('ix_catalog_management_attribute_name'), 'attribute', ['name'], unique=False, schema=CATALOG_SCHEMA) # Updated index
    op.create_index(op.f('ix_catalog_management_attribute_business_details_id'), 'attribute', ['business_details_id'], unique=False, schema=CATALOG_SCHEMA)

    op.create_table('attribute_value',
        sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column('value', sa.String(length=150), nullable=False),
        sa.Column('attribute_id', sa.BigInteger(), nullable=False),
        sa.Column('name', sa.String(length=150), nullable=True),
        sa.Column('attribute_image_url', sa.String(length=255), nullable=True),
        sa.Column('active', sa.String(length=255), nullable=True, server_default='INACTIVE'),
        sa.Column('created_by', sa.BigInteger(), nullable=True),
        sa.Column('created_date', sa.BigInteger(), nullable=True),
        sa.Column('updated_by', sa.BigInteger(), nullable=True),
        sa.Column('updated_date', sa.BigInteger(), nullable=True),
        sa.Column('logo_name', sa.String(length=500), nullable=True),
        sa.ForeignKeyConstraint(['attribute_id'], [f'{CATALOG_SCHEMA}.attribute.id'], name=op.f('fk_attribute_value_attribute_id_attribute')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_attribute_value')),
        sa.UniqueConstraint('attribute_id', 'name', name=op.f('uq_attribute_value_attribute_id_name')),
        sa.UniqueConstraint('attribute_id', 'value', name=op.f('uq_attribute_value_attribute_id_value')),
        schema=CATALOG_SCHEMA
    )
    op.create_index(op.f('ix_catalog_management_attribute_value_attribute_id'), 'attribute_value', ['attribute_id'], unique=False, schema=CATALOG_SCHEMA)
    op.create_index(op.f('ix_catalog_management_attribute_value_name'), 'attribute_value', ['name'], unique=False, schema=CATALOG_SCHEMA)
    op.create_index(op.f('ix_catalog_management_attribute_value_value'), 'attribute_value', ['value'], unique=False, schema=CATALOG_SCHEMA)
    # op.create_index(op.f('ix_catalog_management_attribute_value_id'), 'attribute_value', ['id'], unique=False, schema=CATALOG_SCHEMA) # PKs are auto-indexed

    op.create_table('return_policies',
        sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column('business_details_id', sa.BigInteger(), nullable=False),
        sa.Column('return_policy_code', sa.String(length=255), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('return_window_days', sa.Integer(), nullable=False),
        sa.Column('grace_period_days', sa.Integer(), nullable=False), # Removed server_default
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('created_by', sa.BigInteger(), nullable=True),
        sa.Column('created_date', sa.BigInteger(), nullable=True),
        sa.Column('updated_by', sa.BigInteger(), nullable=True),
        sa.Column('updated_date', sa.BigInteger(), nullable=True),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_return_policies')),
        sa.UniqueConstraint('business_details_id', 'return_policy_code', name=op.f('uq_returnpolicy_business_code')),
        schema=BUSINESS_SCHEMA
    )
    op.create_index(op.f('ix_return_policies_id'), 'return_policies', ['id'], unique=False, schema=BUSINESS_SCHEMA) # Index for PK
    op.create_index(op.f('ix_fazeal_business_return_policies_business_details_id'), 'return_policies', ['business_details_id'], unique=False, schema=BUSINESS_SCHEMA)
    op.create_index(op.f('ix_fazeal_business_return_policies_return_policy_code'), 'return_policies', ['return_policy_code'], unique=False, schema=BUSINESS_SCHEMA)

    op.create_table('upload_sessions',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('session_id', sa.String(), nullable=False),
        sa.Column('business_details_id', sa.BigInteger(), nullable=False),
        sa.Column('load_type', sa.String(), nullable=False),
        sa.Column('original_filename', sa.String(), nullable=True),
        sa.Column('wasabi_path', sa.String(), nullable=True),
        sa.Column('status', sa.String(), server_default='pending', nullable=False),
        sa.Column('details', sa.Text(), nullable=True),
        sa.Column('record_count', sa.Integer(), nullable=True),
        sa.Column('error_count', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), onupdate=sa.text('now()'), nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_upload_sessions')),
        schema=PUBLIC_SCHEMA
    )
    op.create_index('idx_upload_session_business_status', 'upload_sessions', ['business_details_id', 'status'], unique=False, schema=PUBLIC_SCHEMA)
    op.create_index('idx_upload_session_business_created_at', 'upload_sessions', ['business_details_id', 'created_at'], unique=False, schema=PUBLIC_SCHEMA)
    op.create_index(op.f('ix_public_upload_sessions_business_details_id'), 'upload_sessions', ['business_details_id'], unique=False, schema=PUBLIC_SCHEMA)
    op.create_index(op.f('ix_public_upload_sessions_session_id'), 'upload_sessions', ['session_id'], unique=True, schema=PUBLIC_SCHEMA)
    op.create_index(op.f('ix_public_upload_sessions_status'), 'upload_sessions', ['status'], unique=False, schema=PUBLIC_SCHEMA)

    op.create_table('categories',
        sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column('created_by', sa.BigInteger(), nullable=True),
        sa.Column('created_date', sa.BigInteger(), nullable=True),
        sa.Column('updated_by', sa.BigInteger(), nullable=True),
        sa.Column('updated_date', sa.BigInteger(), nullable=True),
        sa.Column('business_details_id', sa.BigInteger(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True), # Renamed from created_at_ts
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('enabled', sa.Boolean(), server_default=sa.true_(), nullable=True),
        sa.Column('image_name', sa.String(length=500), nullable=True),
        sa.Column('name', sa.String(length=150), nullable=False),
        sa.Column('parent_id', sa.BigInteger(), nullable=True),
        sa.Column('long_description', sa.Text(), nullable=True),
        sa.Column('order_type', sa.String(length=255), nullable=True),
        sa.Column('shipping_type', sa.String(length=255), nullable=True),
        sa.Column('active', sa.String(length=255), nullable=True),
        sa.Column('seo_description', sa.String(length=255), nullable=True),
        sa.Column('seo_keywords', sa.String(length=255), nullable=True),
        sa.Column('seo_title', sa.String(length=255), nullable=True),
        sa.Column('url', sa.String(length=255), nullable=True),
        sa.Column('position_on_site', sa.BigInteger(), nullable=True),
        sa.ForeignKeyConstraint(['parent_id'], [f'{PUBLIC_SCHEMA}.categories.id'], name=op.f('fk_categories_parent_id_categories')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_categories')),
        sa.UniqueConstraint('business_details_id', 'name', 'parent_id', name=op.f('uq_category_business_name_parent')),
        sa.UniqueConstraint('url', name=op.f('uq_categories_url')), # Added unique for url based on DDL
        schema=PUBLIC_SCHEMA
    )
    op.create_index(op.f('ix_public_categories_business_details_id'), 'categories', ['business_details_id'], unique=False, schema=PUBLIC_SCHEMA)
    op.create_index('idx_category_business_name', 'categories', ['business_details_id', 'name'], unique=False, schema=PUBLIC_SCHEMA)

    op.create_table('products',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('business_details_id', sa.BigInteger(), nullable=False),
        sa.Column('product_name', sa.String(), nullable=False),
        sa.Column('product_url', sa.String(), nullable=True),
        sa.Column('brand_id', sa.Integer(), nullable=False),
        sa.Column('category_path', sa.String(), nullable=True),
        sa.Column('return_policy_id', sa.Integer(), nullable=False),
        sa.Column('package_length', sa.Float(), nullable=True),
        sa.Column('package_width', sa.Float(), nullable=True),
        sa.Column('package_height', sa.Float(), nullable=True),
        sa.Column('package_weight', sa.Float(), nullable=True),
        sa.Column('status', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), onupdate=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['brand_id'], [f'{CATALOG_SCHEMA}.brands.id'], name=op.f('fk_products_brand_id_brands')),
        sa.ForeignKeyConstraint(['return_policy_id'], [f'{BUSINESS_SCHEMA}.return_policies.id'], name=op.f('fk_products_return_policy_id_return_policies')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_products')),
        sa.UniqueConstraint('business_details_id', 'product_name', name=op.f('uq_product_business_name')),
        schema=CATALOG_SCHEMA
    )
    op.create_index('idx_product_business_status', 'products', ['business_details_id', 'status'], unique=False, schema=CATALOG_SCHEMA)
    op.create_index(op.f('ix_catalog_management_products_business_details_id'), 'products', ['business_details_id'], unique=False, schema=CATALOG_SCHEMA)
    op.create_index(op.f('ix_catalog_management_products_category_path'), 'products', ['category_path'], unique=False, schema=CATALOG_SCHEMA)
    op.create_index(op.f('ix_catalog_management_products_product_name'), 'products', ['product_name'], unique=False, schema=CATALOG_SCHEMA)
    op.create_index(op.f('ix_catalog_management_products_status'), 'products', ['status'], unique=False, schema=CATALOG_SCHEMA)

    op.create_table('categories_attributes',
        sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column('active', sa.String(length=255), nullable=True),
        sa.Column('created_by', sa.BigInteger(), nullable=True),
        sa.Column('created_date', sa.BigInteger(), nullable=True),
        sa.Column('updated_by', sa.BigInteger(), nullable=True),
        sa.Column('updated_date', sa.BigInteger(), nullable=True),
        sa.Column('name', sa.String(length=255), nullable=True),
        sa.Column('category_id', sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(['category_id'], [f'{PUBLIC_SCHEMA}.categories.id'], name=op.f('fk_categories_attributes_category_id_categories')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_categories_attributes')),
        sa.UniqueConstraint('category_id', 'name', name=op.f('uq_categoryattribute_category_name')),
        schema=PUBLIC_SCHEMA
    )
    op.create_index(op.f('ix_public_categories_attributes_category_id'), 'categories_attributes', ['category_id'], unique=False, schema=PUBLIC_SCHEMA) # Index for FK

    op.create_table('meta_tags',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('business_details_id', sa.BigInteger(), nullable=False),
        sa.Column('product_id', sa.Integer(), nullable=False),
        sa.Column('meta_title', sa.String(length=255), nullable=True),
        sa.Column('meta_keywords', sa.Text(), nullable=True),
        sa.Column('meta_description', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), onupdate=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['product_id'], [f'{CATALOG_SCHEMA}.products.id'], name=op.f('fk_meta_tags_product_id_products')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_meta_tags')),
        sa.UniqueConstraint('product_id', name=op.f('uq_meta_tags_product_id')),
        schema=CATALOG_SCHEMA
    )
    op.create_index(op.f('ix_catalog_management_meta_tags_business_details_id'), 'meta_tags', ['business_details_id'], unique=False, schema=CATALOG_SCHEMA)

    op.create_table('product_items',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('business_details_id', sa.BigInteger(), nullable=False),
        sa.Column('product_id', sa.Integer(), nullable=False),
        sa.Column('variant_sku', sa.String(), nullable=False),
        sa.Column('attribute_combination', sa.Text(), nullable=True),
        sa.Column('status', sa.String(), nullable=True),
        sa.Column('published', sa.Boolean(), server_default=sa.false_(), nullable=False),
        sa.Column('default_sku', sa.Boolean(), server_default=sa.false_(), nullable=False),
        sa.Column('quantity', sa.Integer(), server_default=sa.text('0'), nullable=False),
        sa.Column('image_urls', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), onupdate=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['product_id'], [f'{CATALOG_SCHEMA}.products.id'], name=op.f('fk_product_items_product_id_products')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_product_items')),
        sa.UniqueConstraint('business_details_id', 'variant_sku', name=op.f('uq_item_business_sku')),
        schema=CATALOG_SCHEMA
    )
    op.create_index('idx_item_product_id', 'product_items', ['product_id'], unique=False, schema=CATALOG_SCHEMA) # Manually named index
    op.create_index(op.f('ix_catalog_management_product_items_business_details_id'), 'product_items', ['business_details_id'], unique=False, schema=CATALOG_SCHEMA)
    op.create_index(op.f('ix_catalog_management_product_items_status'), 'product_items', ['status'], unique=False, schema=CATALOG_SCHEMA)
    op.create_index(op.f('ix_catalog_management_product_items_variant_sku'), 'product_items', ['variant_sku'], unique=False, schema=CATALOG_SCHEMA)

    op.create_table('product_prices',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('business_details_id', sa.BigInteger(), nullable=False),
        sa.Column('product_id', sa.Integer(), nullable=False),
        sa.Column('price', sa.Float(), nullable=False),
        sa.Column('cost_per_item', sa.Float(), nullable=True),
        sa.Column('offer_price', sa.Float(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), onupdate=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['product_id'], [f'{CATALOG_SCHEMA}.products.id'], name=op.f('fk_product_prices_product_id_products')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_product_prices')),
        sa.UniqueConstraint('product_id', name=op.f('uq_product_prices_product_id')),
        schema=CATALOG_SCHEMA
    )
    op.create_index(op.f('ix_catalog_management_product_prices_business_details_id'), 'product_prices', ['business_details_id'], unique=False, schema=CATALOG_SCHEMA)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop in reverse order of creation, respecting FKs and schemas

    op.drop_index(op.f('ix_catalog_management_product_prices_business_details_id'), table_name='product_prices', schema=CATALOG_SCHEMA)
    op.drop_table('product_prices', schema=CATALOG_SCHEMA)

    op.drop_index(op.f('ix_catalog_management_product_items_variant_sku'), table_name='product_items', schema=CATALOG_SCHEMA)
    op.drop_index(op.f('ix_catalog_management_product_items_status'), table_name='product_items', schema=CATALOG_SCHEMA)
    op.drop_index(op.f('ix_catalog_management_product_items_business_details_id'), table_name='product_items', schema=CATALOG_SCHEMA)
    op.drop_index('idx_item_product_id', table_name='product_items', schema=CATALOG_SCHEMA)
    op.drop_table('product_items', schema=CATALOG_SCHEMA)

    op.drop_index(op.f('ix_catalog_management_meta_tags_business_details_id'), table_name='meta_tags', schema=CATALOG_SCHEMA)
    op.drop_table('meta_tags', schema=CATALOG_SCHEMA)

    op.drop_index(op.f('ix_public_categories_attributes_category_id'), table_name='categories_attributes', schema=PUBLIC_SCHEMA)
    op.drop_table('categories_attributes', schema=PUBLIC_SCHEMA)

    op.drop_index(op.f('ix_catalog_management_products_status'), table_name='products', schema=CATALOG_SCHEMA)
    op.drop_index(op.f('ix_catalog_management_products_product_name'), table_name='products', schema=CATALOG_SCHEMA)
    op.drop_index(op.f('ix_catalog_management_products_category_path'), table_name='products', schema=CATALOG_SCHEMA)
    op.drop_index(op.f('ix_catalog_management_products_business_details_id'), table_name='products', schema=CATALOG_SCHEMA)
    op.drop_index('idx_product_business_status', table_name='products', schema=CATALOG_SCHEMA)
    op.drop_table('products', schema=CATALOG_SCHEMA)

    op.drop_index(op.f('ix_public_categories_business_details_id'), table_name='categories', schema=PUBLIC_SCHEMA)
    op.drop_index('idx_category_business_name', table_name='categories', schema=PUBLIC_SCHEMA)
    op.drop_table('categories', schema=PUBLIC_SCHEMA) # categories_attributes depends on this, so drop it first

    op.drop_index(op.f('ix_public_upload_sessions_status'), table_name='upload_sessions', schema=PUBLIC_SCHEMA)
    op.drop_index(op.f('ix_public_upload_sessions_session_id'), table_name='upload_sessions', schema=PUBLIC_SCHEMA)
    op.drop_index(op.f('ix_public_upload_sessions_business_details_id'), table_name='upload_sessions', schema=PUBLIC_SCHEMA)
    op.drop_index('idx_upload_session_business_status', table_name='upload_sessions', schema=PUBLIC_SCHEMA)
    op.drop_index('idx_upload_session_business_created_at', table_name='upload_sessions', schema=PUBLIC_SCHEMA)
    op.drop_table('upload_sessions', schema=PUBLIC_SCHEMA)

    op.drop_index(op.f('ix_fazeal_business_return_policies_return_policy_code'), table_name='return_policies', schema=BUSINESS_SCHEMA)
    op.drop_index(op.f('ix_fazeal_business_return_policies_business_details_id'), table_name='return_policies', schema=BUSINESS_SCHEMA)
    op.drop_index(op.f('ix_return_policies_id'), table_name='return_policies', schema=BUSINESS_SCHEMA) # Drop PK index
    op.drop_table('return_policies', schema=BUSINESS_SCHEMA)

    op.drop_index(op.f('ix_catalog_management_attribute_value_value'), table_name='attribute_value', schema=CATALOG_SCHEMA)
    op.drop_index(op.f('ix_catalog_management_attribute_value_name'), table_name='attribute_value', schema=CATALOG_SCHEMA)
    op.drop_index(op.f('ix_catalog_management_attribute_value_attribute_id'), table_name='attribute_value', schema=CATALOG_SCHEMA)
    op.drop_table('attribute_value', schema=CATALOG_SCHEMA)

    op.drop_index(op.f('ix_catalog_management_attribute_business_details_id'), table_name='attribute', schema=CATALOG_SCHEMA)
    op.drop_index(op.f('ix_catalog_management_attribute_name'), table_name='attribute', schema=CATALOG_SCHEMA)
    op.drop_table('attribute', schema=CATALOG_SCHEMA)

    op.drop_index(op.f('ix_catalog_management_brands_business_details_id'), table_name='brands', schema=CATALOG_SCHEMA)
    op.drop_index(op.f('ix_catalog_management_brands_name'), table_name='brands', schema=CATALOG_SCHEMA) # Updated from brand_name to name
    op.drop_table('brands', schema=CATALOG_SCHEMA)
    # ### end Alembic commands ###
```
