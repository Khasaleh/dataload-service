"""Create initial tables

Revision ID: 0001
Revises:
Create Date: 2023-11-15 10:00:00.000000
# Note: Actual Create Date will be set by Alembic upon generation. Using a placeholder.

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0001'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # (In a real scenario, `alembic revision -m "create_initial_tables" --autogenerate` would produce this based on models.py)

    op.create_table('brands',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('business_id', sa.String(), nullable=False),
        sa.Column('brand_name', sa.String(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('business_id', 'brand_name', name=op.f('uq_brand_business_name')) # Use op.f() for auto-named constraints
    )
    op.create_index(op.f('ix_brands_brand_name'), 'brands', ['brand_name'], unique=False)
    op.create_index(op.f('ix_brands_business_id'), 'brands', ['business_id'], unique=False)
    # op.create_index(op.f('ix_brands_id'), 'brands', ['id'], unique=False) # PKs are usually indexed by default

    op.create_table('attributes',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('business_id', sa.String(), nullable=False),
        sa.Column('attribute_name', sa.String(), nullable=False),
        sa.Column('allowed_values', sa.Text(), nullable=True), # Changed to sa.Text
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('business_id', 'attribute_name', name=op.f('uq_attribute_business_name'))
    )
    op.create_index(op.f('ix_attributes_attribute_name'), 'attributes', ['attribute_name'], unique=False)
    op.create_index(op.f('ix_attributes_business_id'), 'attributes', ['business_id'], unique=False)

    op.create_table('return_policies',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('business_id', sa.String(), nullable=False),
        sa.Column('return_policy_code', sa.String(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('return_window_days', sa.Integer(), nullable=False),
        sa.Column('grace_period_days', sa.Integer(), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('business_id', 'return_policy_code', name=op.f('uq_returnpolicy_business_code'))
    )
    op.create_index(op.f('ix_return_policies_business_id'), 'return_policies', ['business_id'], unique=False)
    op.create_index(op.f('ix_return_policies_return_policy_code'), 'return_policies', ['return_policy_code'], unique=False)

    op.create_table('upload_sessions',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('session_id', sa.String(), nullable=False),
        sa.Column('business_id', sa.String(), nullable=False),
        sa.Column('load_type', sa.String(), nullable=False),
        sa.Column('original_filename', sa.String(), nullable=True),
        sa.Column('wasabi_path', sa.String(), nullable=True),
        sa.Column('status', sa.String(), nullable=False),
        sa.Column('details', sa.Text(), nullable=True),
        sa.Column('record_count', sa.Integer(), nullable=True),
        sa.Column('error_count', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        # Manually defined composite indexes from __table_args__
        sa.Index('idx_upload_session_business_status', 'business_id', 'status'),
        sa.Index('idx_upload_session_business_created_at', 'business_id', 'created_at')
    )
    op.create_index(op.f('ix_upload_sessions_business_id'), 'upload_sessions', ['business_id'], unique=False)
    op.create_index(op.f('ix_upload_sessions_session_id'), 'upload_sessions', ['session_id'], unique=True)
    op.create_index(op.f('ix_upload_sessions_status'), 'upload_sessions', ['status'], unique=False) # For status filtering

    op.create_table('products',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('business_id', sa.String(), nullable=False),
        sa.Column('product_name', sa.String(), nullable=False),
        sa.Column('product_url', sa.String(), nullable=True),
        sa.Column('brand_id', sa.Integer(), nullable=False),
        sa.Column('category_path', sa.String(), nullable=True),
        sa.Column('return_policy_id', sa.Integer(), nullable=False),
        sa.Column('package_length', sa.Float(), nullable=True),
        sa.Column('package_width', sa.Float(), nullable=True),
        sa.Column('package_height', sa.Float(), nullable=True),
        sa.Column('package_weight', sa.Float(), nullable=True),
        sa.Column('status', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], name=op.f('fk_products_brand_id_brands')),
        sa.ForeignKeyConstraint(['return_policy_id'], ['return_policies.id'], name=op.f('fk_products_return_policy_id_return_policies')),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('business_id', 'product_name', name=op.f('uq_product_business_name')),
        # Manually defined composite index from __table_args__
        sa.Index('idx_product_business_status', 'business_id', 'status')
    )
    op.create_index(op.f('ix_products_business_id'), 'products', ['business_id'], unique=False)
    op.create_index(op.f('ix_products_category_path'), 'products', ['category_path'], unique=False) # Added index
    op.create_index(op.f('ix_products_product_name'), 'products', ['product_name'], unique=False)
    op.create_index(op.f('ix_products_status'), 'products', ['status'], unique=False) # Added index

    op.create_table('meta_tags',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('business_id', sa.String(), nullable=False),
        sa.Column('product_id', sa.Integer(), nullable=False),
        sa.Column('meta_title', sa.String(), nullable=True),
        sa.Column('meta_keywords', sa.Text(), nullable=True),
        sa.Column('meta_description', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_meta_tags_product_id_products')),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('product_id', name=op.f('uq_meta_tags_product_id'))
    )
    op.create_index(op.f('ix_meta_tags_business_id'), 'meta_tags', ['business_id'], unique=False)

    op.create_table('product_items',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('business_id', sa.String(), nullable=False),
        sa.Column('product_id', sa.Integer(), nullable=False),
        sa.Column('variant_sku', sa.String(), nullable=False),
        sa.Column('attribute_combination', sa.Text(), nullable=True),
        sa.Column('status', sa.String(), nullable=True),
        sa.Column('published', sa.Boolean(), nullable=False, server_default=sa.false_()), # Explicit server_default
        sa.Column('default_sku', sa.Boolean(), nullable=False, server_default=sa.false_()), # Explicit server_default
        sa.Column('quantity', sa.Integer(), nullable=False, server_default=sa.text('0')), # Explicit server_default
        sa.Column('image_urls', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_product_items_product_id_products')),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('business_id', 'variant_sku', name=op.f('uq_item_business_sku')),
        # Manually defined index from __table_args__
        sa.Index('idx_item_product_id', 'product_id')
    )
    op.create_index(op.f('ix_product_items_business_id'), 'product_items', ['business_id'], unique=False)
    op.create_index(op.f('ix_product_items_status'), 'product_items', ['status'], unique=False) # Added index
    op.create_index(op.f('ix_product_items_variant_sku'), 'product_items', ['variant_sku'], unique=False)

    op.create_table('product_prices',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('business_id', sa.String(), nullable=False),
        sa.Column('product_id', sa.Integer(), nullable=False),
        sa.Column('price', sa.Float(), nullable=False),
        sa.Column('cost_per_item', sa.Float(), nullable=True),
        sa.Column('offer_price', sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_product_prices_product_id_products')),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('product_id', name=op.f('uq_product_prices_product_id'))
    )
    op.create_index(op.f('ix_product_prices_business_id'), 'product_prices', ['business_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_product_prices_business_id'), table_name='product_prices')
    op.drop_table('product_prices')

    op.drop_index(op.f('ix_product_items_variant_sku'), table_name='product_items')
    op.drop_index(op.f('ix_product_items_status'), table_name='product_items')
    op.drop_index(op.f('ix_product_items_business_id'), table_name='product_items')
    op.drop_index('idx_item_product_id', table_name='product_items') # Manually named index
    op.drop_table('product_items')

    op.drop_index(op.f('ix_meta_tags_business_id'), table_name='meta_tags')
    op.drop_table('meta_tags')

    op.drop_index(op.f('ix_products_status'), table_name='products')
    op.drop_index(op.f('ix_products_product_name'), table_name='products')
    op.drop_index(op.f('ix_products_category_path'), table_name='products')
    op.drop_index(op.f('ix_products_business_id'), table_name='products')
    op.drop_index('idx_product_business_status', table_name='products') # Manually named index
    op.drop_table('products')

    op.drop_index(op.f('ix_upload_sessions_status'), table_name='upload_sessions')
    op.drop_index(op.f('ix_upload_sessions_session_id'), table_name='upload_sessions')
    op.drop_index(op.f('ix_upload_sessions_business_id'), table_name='upload_sessions')
    op.drop_index('idx_upload_session_business_status', table_name='upload_sessions') # Manually named
    op.drop_index('idx_upload_session_business_created_at', table_name='upload_sessions') # Manually named
    op.drop_table('upload_sessions')

    op.drop_index(op.f('ix_return_policies_return_policy_code'), table_name='return_policies')
    op.drop_index(op.f('ix_return_policies_business_id'), table_name='return_policies')
    op.drop_table('return_policies')

    op.drop_index(op.f('ix_attributes_business_id'), table_name='attributes')
    op.drop_index(op.f('ix_attributes_attribute_name'), table_name='attributes')
    op.drop_table('attributes')

    op.drop_index(op.f('ix_brands_business_id'), table_name='brands')
    op.drop_index(op.f('ix_brands_brand_name'), table_name='brands')
    op.drop_table('brands')
    # ### end Alembic commands ###
```
