{
	"info": {
		"_postman_id": "YOUR_COLLECTION_ID",
		"name": "Catalog Service API",
		"description": "Postman collection for the Catalog Service REST API.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User Info",
			"item": [
				{
					"name": "Get Current User Info (/me)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"me"
							]
						},
						"description": "Retrieves details for the currently authenticated user."
					},
					"response": [
						{
							"name": "Successful User Info Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/users/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"user_id\": \"user123\",\n    \"username\": \"testuser\",\n    \"business_id\": 123,\n    \"roles\": [\n        \"admin\"\n    ],\n    \"company_id_str\": \"FAZ-user123-123-2024-01-random\"\n}"
						},
						{
							"name": "Unauthorized (Invalid/Missing Token)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/users/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"me"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": \"Not authenticated\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "File Upload",
			"item": [
				{
					"name": "Upload CSV File",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/path/to/your/sample.csv",
									"description": "Select your CSV file for upload."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/business/{{business_id}}/upload/{{load_type}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"business",
								"{{business_id}}",
								"upload",
								"{{load_type}}"
							],
							"variable": [
								{
									"key": "business_id",
									"value": "123",
									"description": "Your business ID (integer)"
								},
								{
									"key": "load_type",
									"value": "brands",
									"description": "Type of data being loaded (e.g., brands, products, meta_tags)"
								}
							]
						},
						"description": "Uploads a CSV file for processing (e.g., brands, products, attributes, meta_tags, etc.). \n\nReplace `{{business_id}}` and `{{load_type}}` in the URL with actual values or set them as Postman variables.\n\n**Supported `load_type` values:** \n- `brands`\n- `attributes`\n- `return_policies`\n- `products`\n- `product_items`\n- `product_prices`\n- `meta_tags`"
					},
					"response": [
						{
							"name": "File Accepted for Processing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/business/123/upload/brands",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"business",
										"123",
										"upload",
										"brands"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"File accepted for processing.\",\n    \"session_id\": \"a1b2c3d4-e5f6-7890-1234-567890abcdef\",\n    \"load_type\": \"brands\",\n    \"wasabi_path\": \"uploads/123/a1b2c3d4-e5f6-7890-1234-567890abcdef/brands/yourfile.csv\",\n    \"status\": \"pending\",\n    \"task_id\": \"c1d2e3f4-g5h6-7890-1234-567890ghijkl\"\n}"
						},
						{
							"name": "Invalid File Type (Non-CSV)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/business/123/upload/brands",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"business",
										"123",
										"upload",
										"brands"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": \"Invalid file type. Only CSV files are allowed.\"\n}"
						},
						{
							"name": "Unauthorized or Business ID Mismatch",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/business/123/upload/brands",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"business",
										"123",
										"upload",
										"brands"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": \"Token's business_id does not match business_id in path.\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Upload Sessions",
			"item": [
				{
					"name": "Get Session by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/sessions/{{session_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"sessions",
								"{{session_id}}"
							],
							"variable": [
								{
									"key": "session_id",
									"value": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
									"description": "The UUID of the upload session."
								}
							]
						},
						"description": "Retrieves the details of a specific upload session by its ID."
					},
					"response": [
						{
							"name": "Session Found - Completed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/sessions/a1b2c3d4-e5f6-7890-1234-567890abcdef",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"sessions",
										"a1b2c3d4-e5f6-7890-1234-567890abcdef"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"session_id\": \"a1b2c3d4-e5f6-7890-1234-567890abcdef\",\n    \"business_details_id\": 123,\n    \"load_type\": \"brands\",\n    \"original_filename\": \"brands.csv\",\n    \"wasabi_path\": \"uploads/123/a1b2c3d4-e5f6-7890-1234-567890abcdef/brands/brands.csv\",\n    \"status\": \"completed\",\n    \"details\": \"Successfully processed 50 records.\",\n    \"record_count\": 50,\n    \"error_count\": 0,\n    \"created_at\": \"2024-03-10T10:00:00Z\",\n    \"updated_at\": \"2024-03-10T10:05:00Z\"\n}"
						},
						{
							"name": "Session Found - Pending",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/sessions/a1b2c3d4-e5f6-7890-1234-567890abcdef",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"sessions",
										"a1b2c3d4-e5f6-7890-1234-567890abcdef"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"session_id\": \"a1b2c3d4-e5f6-7890-1234-567890abcdef\",\n    \"business_details_id\": 123,\n    \"load_type\": \"brands\",\n    \"original_filename\": \"brands.csv\",\n    \"wasabi_path\": \"uploads/123/a1b2c3d4-e5f6-7890-1234-567890abcdef/brands/brands.csv\",\n    \"status\": \"pending\",\n    \"details\": null,\n    \"record_count\": null,\n    \"error_count\": null,\n    \"created_at\": \"2024-03-10T10:00:00Z\",\n    \"updated_at\": \"2024-03-10T10:00:00Z\"\n}"
						},
						{
							"name": "Session Found - Failed with Errors",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/sessions/a1b2c3d4-e5f6-7890-1234-567890abcdef",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"sessions",
										"a1b2c3d4-e5f6-7890-1234-567890abcdef"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"session_id\": \"a1b2c3d4-e5f6-7890-1234-567890abcdef\",\n    \"business_details_id\": 123,\n    \"load_type\": \"brands\",\n    \"original_filename\": \"brands.csv\",\n    \"wasabi_path\": \"uploads/123/a1b2c3d4-e5f6-7890-1234-567890abcdef/brands/brands.csv\",\n    \"status\": \"failed_validation\",\n    \"details\": \"[{\\\"row_number\\\": 2, \\\"field_name\\\": \\\"name\\\", \\\"error_message\\\": \\\"Brand name cannot be empty.\\\", \\\"error_type\\\": \\\"VALIDATION\\\", \\\"offending_value\\\": \\\"\\\"}]\",\n    \"record_count\": 50,\n    \"error_count\": 1,\n    \"created_at\": \"2024-03-10T10:00:00Z\",\n    \"updated_at\": \"2024-03-10T10:02:00Z\"\n}"
						},
						{
							"name": "Session Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/sessions/nonexistentsessionid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"sessions",
										"nonexistentsessionid"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": \"Upload session not found or not authorized for this business.\"\n}"
						}
					]
				},
				{
					"name": "List Sessions for Business",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/sessions?limit=10&skip=0&status=completed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"sessions"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "(Optional) Number of records to return. Default 100."
								},
								{
									"key": "skip",
									"value": "0",
									"description": "(Optional) Number of records to skip for pagination. Default 0."
								},
								{
									"key": "status",
									"value": "completed",
									"description": "(Optional) Filter by status (e.g., pending, completed, failed_validation)."
								}
							]
						},
						"description": "Lists upload sessions for the authenticated user's business. Supports pagination and status filtering."
					},
					"response": [
						{
							"name": "Successful List of Sessions",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/sessions?limit=10&skip=0&status=completed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"sessions"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "skip",
											"value": "0"
										},
										{
											"key": "status",
											"value": "completed"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"items\": [\n        {\n            \"session_id\": \"a1b2c3d4-e5f6-7890-1234-567890abcdef\",\n            \"business_details_id\": 123,\n            \"load_type\": \"brands\",\n            \"original_filename\": \"brands.csv\",\n            \"wasabi_path\": \"uploads/123/a1b2c3d4-e5f6-7890-1234-567890abcdef/brands/brands.csv\",\n            \"status\": \"completed\",\n            \"details\": \"Successfully processed 50 records.\",\n            \"record_count\": 50,\n            \"error_count\": 0,\n            \"created_at\": \"2024-03-10T10:00:00Z\",\n            \"updated_at\": \"2024-03-10T10:05:00Z\"\n        },\n        {\n            \"session_id\": \"b2c3d4e5-f6g7-8901-2345-678901abcdefg\",\n            \"business_details_id\": 123,\n            \"load_type\": \"products\",\n            \"original_filename\": \"products.csv\",\n            \"wasabi_path\": \"uploads/123/b2c3d4e5-f6g7-8901-2345-678901abcdefg/products/products.csv\",\n            \"status\": \"completed\",\n            \"details\": \"Successfully processed 250 records.\",\n            \"record_count\": 250,\n            \"error_count\": 0,\n            \"created_at\": \"2024-03-09T12:00:00Z\",\n            \"updated_at\": \"2024-03-09T12:15:00Z\"\n        }\n    ],\n    \"total\": 25 \n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8000",
			"type": "string",
			"description": "Base URL of your API (e.g., http://localhost:8000 or your production URL)"
		},
		{
			"key": "token",
			"value": "YOUR_JWT_TOKEN_HERE",
			"type": "string",
			"description": "Your JWT Bearer token for authentication."
		},
		{
			"key": "business_id",
			"value": "123",
			"type": "string",
			"description": "Default business_id for upload requests."
		},
		{
			"key": "load_type",
			"value": "brands",
			"type": "string",
			"description": "Default load_type for upload requests."
		},
		{
			"key": "session_id",
			"value": "YOUR_SESSION_ID_HERE",
			"type": "string",
			"description": "Session ID to query for status."
		}
	]
}
</tbody>
